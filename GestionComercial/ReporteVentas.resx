<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonBuscarProductos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        cgAADnIB6yf3TQAAAAd0SU1FB+AJBxMxHx9i/IQAAAQMSURBVEhLzZX9T1tVGMf9I+bEdZS20JaXsZkw
        X+Yic5uOuWyEmM3FLCb7D0wUndOYqCwDSkt7e2/v7UgRUmAJMUxkiGNsWWcmoMBk06CRwYCEDdzmFBi0
        SPn6nNPrld5e5n7YjN/kSdrnnPt8znme55zzGP4j/X9A01M30NrWD0mJoKKqAz4pgs+/6MHkjV/VGQ+m
        VUEL87MoK2/Dtl0hbNgswZrrQ7rDDUuOj/6L2LqzBqVHmjAzc0f94v4yBPUN/IxnCqux3iFSYAnmbD+s
        eSKy8iXYNogwO/2qn8xRht5vL6tfrq4U0MDlX2Df6KFAMgUUsPFZEa8fbsAnx9sgyWdQ6enAwTfCKHhe
        pjkigYNYl/kxzl/oUyMYKwn05+IstrwoICMnQKsVUVQcxOkvv0d8aVGdkdByfAlnuwZRcjAEG+3Umivj
        hZdEDF+bUGekKgnk8rRQuvwcVFQcwuDgCPfHYstYWIhrxv4zTUxMoWhfELZcWpjTRzX9irxLfEwvDfTH
        79PYsaeW5z6vQEDLqV7uXwnQG9PVqz8hnWpmJVjhLgWj16e5Xy8NxFKx6TmqC6Vs/6FGzN+boZXfH8SM
        qeQ1ARZK39qMcqrVEPfppYHqG3rg2MS6yY93PjjNfUaB9cYkyedgyvLjSZuA2voI9+mlgYKhHmRS62bm
        Sah0JyYbBdYbU/Nn3yHN5sO6LAGi8jX36aWB6sLdsNOOMmhHpUdbuM8osN6YJKWT7yjN5kdNbRd5Es2y
        Uhro4qUf6GwE+SEs3h/G3d9uY5G62ij4SmPavY81g4w063F091zjPr000NzcXby894TadX6cbP6G+6MG
        wf82pt7eH2Gyezho5x4ZY2NT3K+XBmLyCK1Y75Sog0TseOUErlwZ5f7VIMPD47QbhQ5tgK4oAW7BOG1M
        SSAgjvzNH1GdZPpQwtOFXrS3d6tjyboQ6aMMBKiBJOpWBvMioJxVR1OlAwHj42PIKfARjK4WWqnZKWLL
        Nh+OftiMal8LjlV0YOv2Kpgy3RRcJpAM51MKh5mdVQjVnVcjJSsFxDQ0NIbiAzVULwakG5sCplNKTXaR
        X1G2PIXGAmRebN/NfnsJFqSuVfC4uRyh+lSYIYjp1q3b1LbnUHLgU2RkV2CNuZIOpB9rLQK9S2XY+2od
        qqo7MTIyjLeONOIJi0uDmewuNDSx8/RPvVYFJbSMmzfvoK//OtraBxBujOBUaz+9V6OYnGQPXiJQLDqH
        N98OU3u74KA0ZuXLlEov3TYX+TjTv4AeXBxW2kC3g4fXi8Es2W66NS7x8YcGSiiGd98/SallsCClUMKh
        w/WIRmMPG8QURel7TViTfoxeXhdduJ3kiz8KEHso71FNB9HZNYTZ2XnueySgVAF/AWMvD3rcT1aJAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>